# The packages below shoude be installed before procedure
import numpy as np
from scipy import stats
import matplotlib.pyplot as plt

#-------------------- Arrhenius Equation Fitting --------------------

# Example Arrhenius data: rate constants (k) at different temperatures (T)
# NOTE: Temperature must be in Kelvin (K).
T_kelvin = np.array([353.15, 373.15, 393.15, 413.15]) # Temperatures in Kelvin
k_values = np.array([0.0419, 0.1072, 0.3079, 0.4125]) # k values calculated by the code named 'First-order'.

# Convert data for linear regression
inv_T = 1 / T_kelvin
ln_k = np.log(k_values)

# Perform linear regression on the Arrhenius plot
arrhenius_slope, arrhenius_intercept, arrhenius_r, _, _ = stats.linregress(inv_T, ln_k)

# Constants
R = 8.314  # Universal gas constant in J/molÂ·K

# Calculate activation energy (Ea) and pre-exponential factor (A)
Ea = -arrhenius_slope * R
A = np.exp(arrhenius_intercept)

print("\n--- Arrhenius Equation Fit ---")
print(f"Activation Energy (Ea) = {Ea/1000:.2f} kJ/mol")
print(f"Pre-exponential Factor (A) = {A:.2f} h^-1")
print(f"R^2 for Arrhenius fit = {arrhenius_r**2:.3f}")

# Plot the Arrhenius data
plt.scatter(inv_T, ln_k, color="green", label="Arrhenius Data")
plt.plot(inv_T, arrhenius_intercept + arrhenius_slope * inv_T, color="orange", label="Arrhenius Fit")
plt.xlabel("1/T (K^-1)")
plt.ylabel("ln(k)")
plt.legend()
plt.title("Arrhenius Plot")
plt.savefig('arrhenius_plot.png', dpi=300)
plt.show()

