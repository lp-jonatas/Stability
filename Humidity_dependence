import numpy as np
from scipy.optimize import curve_fit
import matplotlib.pyplot as plt

# Dataset: Diffentent values of k under different moisture content (X, % w.b.), note that here H is equal to moisture content (X %) Reference: https://doi.org/10.1016/j.jfoodeng.2005.02.023
# For illustration just data above X = 55 % was considered (temperature equal to 50Â° C).

H_data = np.array([55, 65, 85, 95])
k_1_data = np.array([2.75E-04, 3.19E-04, 4.53E-04, 5.53E-04])

# --- 1. Define Models ---
# Exponential: k_1 = k_ref * exp(B * H)
def exponential_model(H, k_ref, B):
    return k_ref * np.exp(B * H)

# Power: k_1 = k' * H^n
def power_model(H, k_prime, n):
    return k_prime * (H ** n)

# --- 2. Fit Models using curve_fit ---
# Fit Exponential Model
popt_exp, pcov_exp = curve_fit(exponential_model, H_data, k_1_data)
k_ref_fit, B_fit = popt_exp

# Fit Power Model
popt_pow, pcov_pow = curve_fit(power_model, H_data, k_1_data)
k_prime_fit, n_fit = popt_pow

# --- 3. Calculate R-squared for each model ---
def calculate_r_squared(y_true, y_pred):
    ss_res = np.sum((y_true - y_pred)**2)
    ss_tot = np.sum((y_true - np.mean(y_true))**2)
    return 1 - (ss_res / ss_tot)

# R-squared for Exponential Model
k_1_pred_exp = exponential_model(H_data, *popt_exp)
r_squared_exp = calculate_r_squared(k_1_data, k_1_pred_exp)

# R-squared for Power Model
k_1_pred_pow = power_model(H_data, *popt_pow)
r_squared_pow = calculate_r_squared(k_1_data, k_1_pred_pow)

# --- 4. Print Results ---
print("--- Results of Non-linear Curve Fitting ---")
print("\nExponential Model Parameters:")
print(f"k_ref = {k_ref_fit:.4f}")
print(f"B = {B_fit:.4f}")
print(f"R-squared = {r_squared_exp:.4f}")

print("\nPower Model Parameters:")
print(f"k' = {k_prime_fit:.4f}")
print(f"n = {n_fit:.4f}")
print(f"R-squared = {r_squared_pow:.4f}")

# --- 5. Plot the Fits ---
plt.figure(figsize=(10, 6))
H_plot = np.linspace(min(H_data), max(H_data), 100)
k_1_exp_fit = exponential_model(H_plot, *popt_exp)
k_1_pow_fit = power_model(H_plot, *popt_pow)

plt.scatter(H_data, k_1_data, color='red', label='Experimental Data', zorder=5)
plt.plot(H_plot, k_1_exp_fit, 'b--', label=f'Exponential Fit ($R^2$={r_squared_exp:.4f})')
plt.plot(H_plot, k_1_pow_fit, 'g-.', label=f'Power Fit ($R^2$={r_squared_pow:.4f})')

plt.title('Non-linear Curve Fitting of Kinetic Models')
plt.xlabel('Humidity (H)')
plt.ylabel('Rate Constant ($k_1$)')
plt.legend()
plt.grid(True)

# Save the figure with a high resolution (300 dpi)
plt.savefig('kinetic_humidity_models.png', dpi=300)
plt.show()
